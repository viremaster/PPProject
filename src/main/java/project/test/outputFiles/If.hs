import Sprockell

prog :: [Instruction]
prog = [ 
       Load (ImmValue 4) regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 3) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Lt regA regB regA, 
       Push regA, 
       Pop regA, 
       Branch regA (Rel 33), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 3) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Equal regA regB regA, 
       Push regA, 
       Pop regA, 
       Branch regA (Rel 12), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 7) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Sub regA regB regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Jump (Rel 11), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 3) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Sub regA regB regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Jump (Rel 11), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 1) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Sub regA regB regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       EndProg
       ]

main = run [prog]