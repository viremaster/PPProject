import Sprockell

prog :: [Instruction]
prog = [ 
       Load (ImmValue 2) regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Load (ImmValue 3) regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 4), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Lt regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Gt regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Equal regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute LtE regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute GtE regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 4) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Equal regA regB regA, 
       Push regA, 
       Pop regA, 
       Load (ImmValue 1) regB, 
       Compute Xor regA regB regA, 
       Push regA, 
       Pop regA, 
       WriteInstr regA numberIO, 
       EndProg
       ]

main = run [prog]